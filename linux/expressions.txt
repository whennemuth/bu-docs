# Version of Linux (distro):
cat /etc/*-release

# Kernel version and gcc version used to build the same:
cat /proc/version

# Kernel version:
uname -a

# List directories from the root according to size in descending order:
sudo du -x -d1 -h / | sort -h -r

# How much memory do I have (megabytes)
free -m

# Search all directories for a file by name (case-insensitive search)
sudo find / -type f -iname "myfile.txt" 

# sed example using regex and captured match to make a replacement (in a file, using -i parameter)
# Replace a quoted value with itself, followed by a space and another quoted value
# The quoted value in the example is 'protocol="AJP/1.3"'
# NOTE: it is difficult to escape single quotes within single quotes with sed, so bound the expression with double-quotes.
sed -i -r "s/(protocol=[\"']AJP\/1\.3[\"'])/\1 tomcatAuthentication=\"false\"/g" server.xml

# Search through a directory and its subdirectories recursively for any files containing text that matches a specified pattern:
grep -irP 'my regex pattern' /etc/my/directory

# Query memory usage:
grep -P '(Mem)|(Cache)|(Swap)' /proc/meminfo

# Use tcpdump to screen for all traffic on (or except) a particlar port with packet ascii content matching a pattern
tcpdump -XX -n port 8080 | grep -i -P '(forwarded-for)|(REMOTE_USER)' -A 10 -B 10
tcpdump -XX -n port not 22 | grep -i -P '(forwarded-for)|(REMOTE_USER)' -A 10 -B 10
tcpdump k /opt/kuali/tls/private/kuali-research.bu.edu-2048bit-sha256-2016.key -i eth0 -dXXn port 8080 or 443

# Find out what the latest release of a major version of tomcat is (tomcat 8 in this case)
curl "https://archive.apache.org/dist/tomcat/tomcat-8/?C=M;O=A" | grep 'v8' | tail -n 1 | grep -Po '(?<=>)[^<>]+(?=</a>)' | sed 's/\///'

# Send the output of a command to nothing (won't get printed)
mycommand > /dev/null

# Send the output of stdout to stderr
mycommand > 1>&2

# Suppress output unless it's an error
mycommand > /dev/null 2>&1

# SCP example: Quick transfer of war files between servers:
# 1) Transfer private key to jenkins server from laptop.
scp -C -i /c/Users/wrh/.ssh/buaws-kuali-rsa /c/Users/wrh/.ssh/buaws-kuali-rsa wrh@10.57.236.6:/home/wrh/.ssh/
# 2) log into jenkins server and reduce permissions on the private key
chmod 600 ~/.ssh/buaws-kuali-rsa
# 3) From the jenkins server transfer the last built war file to another server (staging in this case)
scp -C -i ~/.ssh/buaws-kuali-rsa /var/lib/jenkins/workspace/kuali-research-1-build-war/coeus-webapp/target/coeus-webapp-1709.0037.war wrh@10.57.236.68:/home/wrh/
# 4) Remove the private key
rm -f ~/.ssh/buaws-kuali-rsa

# Get the number of files in a directory whose name(s) match a specified pattern ("*_rsa" in this case)
ls -1 *_rsa | wc -l

# Create an rsa key:
ssh-keygen -b 2048 -t rsa -f bu_kuali_id_jenkins_rsa -q -N ""

# Show a log of only those git commits that are tagged and show the date, ref and tag
git log --tags --simplify-by-decoration --pretty="format:%h %ci %d" -n 10

# urlencode a string. Can be used to supply a password along with a command against a git repository that requires authentication (if not using a key).
ENCODED_PASSWORD="$(echo -ne $GIT_PASSWORD | xxd -plain | tr -d '\n' | sed 's/\(..\)/%\1/g')"
git pull https://$GIT_USER:$ENCODED_PASSWORD@myrepo master
